---
- name: Copy down the Splunk installation deb
  shell: "wget -O {{ splunk_package_file }} 'https://www.splunk.com/page/download_track?file={{ splunk_version }}/linux/{{ splunk_package_file }}&ac=&wget=true&name=wget&platform=Linux&architecture=x86_64&version={{ splunk_version }}&product={{ splunk_product }}&typed=release'"
  changed_when: False
  check_mode: no
  args:
    chdir:  /root/
    creates: "/root/{{ splunk_package_file }}"

- name: Checking if Splunk is installed
  stat: "path={{ splunk_base }}/bin/splunk"
  register: splunk_path

- name: Splunk is installed
  debug: msg='splunk is installed at {{ splunk_base }}'
  when: splunk_path.stat.exists

- name: Get Splunk version
  shell: "echo $(cat {{ splunk_base }}/etc/splunk.version | grep VERSION | cut -d'=' -f2)"
  register: splunk_version_check
  changed_when: False
  check_mode: no
  when: splunk_path.stat.exists

- name: Install Splunk from .deb package
  apt: "deb=/root/{{splunk_package_file}}"
  register: splunk_installed
  when: splunk_version_check is skipped or splunk_version_check.stdout is version(splunk_version, '<')

# Fix up perms on filesystem after user and group created
- name: Fix up perms after splunk user created
  file: dest="{{ item.mount_path }}" owner=splunk group=splunk recurse=yes
  with_items: "{{ disk_mounts }}"
  when: disk_mounts is defined

- name: Sets default acl for splunk on /var/log
  shell: setfacl -Rm u:splunk:rX,d:u:splunk:rX /var/log

- name: Add sudoers config to allow service restarts as splunk user
  copy:
    content: |
      %splunk ALL = (root) NOPASSWD: /bin/systemctl start Splunkd.service
      %splunk ALL = (root) NOPASSWD: /bin/systemctl stop Splunkd.service
      %splunk ALL = (root) NOPASSWD: /bin/systemctl restart Splunkd.service
    dest: "/etc/sudoers.d/splunk"
    owner: root
    group: root
    mode: '0440'