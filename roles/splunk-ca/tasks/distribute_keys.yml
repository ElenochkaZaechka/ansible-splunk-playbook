---
- name: "Ensures appropriate directories exist"
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "{{ ca_default_ssl_certs_dir }}"
    - "{{ ca_default_ssl_key_dir }}"
    - "{{ ca_certs_dir }}"

# Copy root CA cert to CA server default cert location
- name: "Copy cert to {{ ca_default_ssl_certs_dir }}"
  copy: src="{{ ca_distribution_dir }}/{{ item }}" dest="{{ ca_default_ssl_certs_dir }}/{{ item }}"
  with_items:
    - "{{ ca_cert }}"
  when:
    - ca_distribute_root_keys|default(False)
    - "stage.ca.ca_descriptor in ansible_hostname"
  no_log: true

# Copy root CA keys to CA server default key location
- name: "Copy keys to {{ ca_default_ssl_key_dir }}"
  copy: src="{{ ca_distribution_dir }}/{{ item }}" dest="{{ ca_default_ssl_key_dir }}/{{ item }}"
  with_items:
    - "{{ ca_key }}"
    - "{{ ca_pub_key }}"
  when:
    - ca_distribute_root_keys|default(False)
    - "stage.ca.ca_descriptor in ansible_hostname"
  no_log: true

# Copy root CA cert to client nodes to add as trusted CA
- name: "Copy {{ ca_cert }} to {{ ca_certs_dir }}"
  copy:
    src: "{{ ca_distribution_dir }}/{{ ca_cert }}"
    dest: "{{ ca_certs_dir }}/ca-cert.crt"
    owner: root
    group: root
    mode: 0644
  when: ca_distribute_ca_cert|default(False)
  notify:
    - update trusted ca debian
  no_log: true

# Host keys and certs
- name: "Distribute inventory_hostname-priv-key.pem to inventory_hostname"
  copy: src="{{ ca_distribution_dir }}/{{ inventory_hostname }}-priv-key.pem" dest="{{ ca_default_ssl_key_dir }}/{{ inventory_hostname }}-priv-key.pem"
  when: ca_distribute_keys|default(False)
  no_log: true

- name: "Distribute inventory_hostname-cert.pem to inventory_hostname"
  copy: src="{{ ca_distribution_dir }}/{{ inventory_hostname }}-cert.pem" dest="{{ ca_default_ssl_certs_dir }}/{{ inventory_hostname }}-cert.pem"
  when: ca_distribute_keys|default(False)
  no_log: true