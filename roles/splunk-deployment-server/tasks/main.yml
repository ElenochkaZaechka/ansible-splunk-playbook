---
# Configure Deployment Server
- name: Include Secrets
  include_vars: "./group_vars/secrets/secrets.yml"
  tags: deploy_indexes

# Sets stage based on the deploy_stage environment variable
- set_fact: stage="{{ vars[deploy_stage] }}"
  tags: deploy_indexes
  
- set_fact: stage="{{ stage|combine(stage_spec,recursive=True) }}"
  tags: deploy_indexes
  when: use_stage_spec|default(False)

- name: Set facts for systemd servers
  set_fact:
    notify_task: "restart splunk systemd"
  tags: deploy_indexes
  when: ansible_service_mgr == "systemd"

- name: Set facts for non systemd servers
  set_fact:
    notify_task: "restart splunk service"
  tags: deploy_indexes
  when: ansible_service_mgr != "systemd"

# If use_shclustering is true import setup tasks
- import_tasks: shcluster_setup.yml
  when: use_shclustering|default(False)

- name: Check for serverclass.conf file
  stat: "path={{ splunk_base }}/etc/system/local/serverclass.conf"
  register: serverclass_file

- name: Enable Deployment Server
  shell: "{{ splunk_base }}/bin/splunk enable deploy-server -auth admin:'{{ stage.splunk_current_admin_password }}'"
  become_user: splunk
  ignore_errors: True
  when: serverclass_file.stat.exists == False
  notify: "{{ notify_task }}"
  no_log: true

- name: Create serverclass.conf to local system
  template:
    src: system_local.serverclass.j2
    dest: "{{ splunk_base }}/etc/system/local/serverclass.conf"
    owner: splunk
    group: splunk
    mode: '0640'
  notify: "{{ notify_task }}"

# Import custom apps
- import_tasks: deploy_forwarder_volume_indexes.yml
- import_tasks: deploy_search_head_volume_indexes.yml
- import_tasks: deploy_indexer_volume_indexes.yml
- import_tasks: deploy_all_indexes.yml
- import_tasks: deploy_cluster_indexer_base.yml
- import_tasks: deploy_forwarder_outputs.yml
- import_tasks: deploy_heavy_forwarder_outputs.yml
- import_tasks: deploy_secvtools_syslog_inputs.yml
- import_tasks: deploy_sites.yml

# Import Splunkbase apps
- import_tasks: deploy_Splunk_Packages.yml